# Large parts of this are directly copied or adapted from 
#  https://packaging.python.org/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows/

# This action triggers the second stage of publishing this module. When a new release is created this action will begin. It builds the module, then
#  publishes it to the real PyPI index


# The overall name of the action
name: Publish XGA to real PyPI, triggered on creation of release

# This action triggers when there is a release to the repo
on: release

# Now the actual jobs we want the action to do are setup
jobs:
  # The only job in this action, building and publishing the XGA Python module
  build-n-publish:
    name: Build and publish XGA
    # I actually only want to run this one if the pushed commit has a tag - I will only do this for new versions of the module
    if: startsWith(github.ref, 'refs/tags')
    # The build/publishing process runs on Ubuntu 18.04 - not super important what this is for this use case, so long as its not Windows
    runs-on: ubuntu-18.04
    
    # This job has several steps
    steps:
      # Checks out the master branch (what we want to build and publish), then activates a relatively recent version of Python
    - uses: actions/checkout@master
    - name: Setup the Python install
      uses: actions/setup-python@v1
      with:
        python-version: 3.7
    
    # The next two chunks set up PIP properly and build the module
    - name: Install pypa/build
      run: >-
        python -m
        pip install
        build
        --user
    
    - name: Build a binary wheel and source tarball
      run: >-
        python -m
        build
        --sdist
        --wheel
        --outdir dist/
        .
    
#     # Then the module is published to the test PyPI index
#     - name: Publish to TestPyPI
#       uses: pypa/gh-action-pypi-publish@master
#       with:
#         password: ${{ secrets.TEST_PYPI_API_TOKEN }}
#         repository_url: https://test.pypi.org/legacy/
